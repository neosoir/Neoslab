# Principal Domain (HTTP)
server {
    listen 80;
    server_name ${PRIMARY_DOMAIN};

    location / {
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# Ollama API
server {
    listen 80;
    server_name ollama.${PRIMARY_DOMAIN};

    location / {
        proxy_pass http://ollama:11434;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_buffering off;
        chunked_transfer_encoding on;
    }
}

server {
    listen 443 ssl;
    server_name ollama.${PRIMARY_DOMAIN};

    ssl_certificate /etc/letsencrypt/live/ollama.${PRIMARY_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ollama.${PRIMARY_DOMAIN}/privkey.pem;

    location / {
        proxy_pass http://ollama:11434;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_buffering off;
        chunked_transfer_encoding on;
    }
}

# Redirección de HTTP a HTTPS
server {
    listen 80;
    server_name ${PRIMARY_DOMAIN} www.${PRIMARY_DOMAIN};

    return 301 https://${PRIMARY_DOMAIN}$request_uri;
}

# HTTPS Configuration for Primary Domain
server {
    listen 443 ssl;
    server_name ${PRIMARY_DOMAIN} www.${PRIMARY_DOMAIN};

    ssl_certificate /etc/letsencrypt/live/${PRIMARY_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${PRIMARY_DOMAIN}/privkey.pem;

    location / {
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# Redirección de HTTP a HTTPS para www
server {
    if ($host = www.${PRIMARY_DOMAIN}) {
        return 301 https://$host$request_uri;
    }

    if ($host = ${PRIMARY_DOMAIN}) {
        return 301 https://$host$request_uri;
    }

    listen 80;
    server_name ${PRIMARY_DOMAIN} www.${PRIMARY_DOMAIN};
    return 404;
}

# Secondary Domain Redirects (HTTP)
server {
    listen 80;
    server_name ${SECONDARY_DOMAIN} www.${SECONDARY_DOMAIN};

    return 301 https://${PRIMARY_DOMAIN}$request_uri;
}

# Secondary Domain Redirects (HTTPS)
server {
    listen 443 ssl;
    server_name ${SECONDARY_DOMAIN} www.${SECONDARY_DOMAIN};

    ssl_certificate /etc/letsencrypt/live/${SECONDARY_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${SECONDARY_DOMAIN}/privkey.pem;

    return 301 https://${PRIMARY_DOMAIN}$request_uri;
}
